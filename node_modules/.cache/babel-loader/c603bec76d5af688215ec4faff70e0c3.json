{"ast":null,"code":"var _jsxFileName = \"/home/abdulhayan/stack/mern/react/practice/vidly/src/common/newMovieForm/newMovieForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport ReuseAbleForm from \"./ReuseableForm\";\nimport InputFeild from \"./Input\";\nimport InputFeildSelect from \"./Input_select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewMovieForm extends ReuseAbleForm {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: {\n        title: \"\",\n        genre: \"\",\n        numberInStock: \"\",\n        rate: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      title: Joi.string().required().label(\"Title\"),\n      genre: Joi.string().required().label(\"Genre\"),\n      numberInStock: Joi.number().integer().min(0).max(100).required().label(\"Number in Stock\"),\n      rate: Joi.number().integer().min(0).max(10).required().label(\"Rate\")\n    };\n\n    this.doSubmit = () => {\n      //server call\n      console.log(this.state.data);\n    };\n\n    this.renderButton = label => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: this.handleErrors(),\n        onClick: this.handleForm,\n        className: \"btn btn-primary\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderInput = (name, label, type) => {\n      const {\n        data,\n        errors\n      } = this.state; // const { newMovie } = this.props.match.params;\n      // newMovie(\"hayan\");\n\n      return /*#__PURE__*/_jsxDEV(InputFeild, {\n        name: name,\n        label: label,\n        value: data[name],\n        onChange: this.handleOnChange,\n        type: type,\n        error: errors[name]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleForm,\n        children: [this.renderInput(\"title\", \"Title\", \"text\"), /*#__PURE__*/_jsxDEV(InputFeildSelect, {\n          name: \"genre\",\n          value: this.state.data.genre,\n          onChange: this.handleOnChange,\n          error: this.state.errors.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\"), this.renderInput(\"rate\", \"Rate\", \"number\"), this.renderButton(\"Save\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NewMovieForm; // import React from \"react\";\n// import { useParams,useNavigate, useLocation } from \"react-router-dom\";\n// import { useState } from \"react\";\n// import InputFeild from \"./Input\";\n// import InputFeildSelect from \"./Input_select\";\n// import Joi from \"joi-browser\";\n// const NewMovieForm = () => {\n//   const fun = {function: () => {console.log(\"ffgf\")}}\n//   console.log(fun);\n//   const location = useLocation();\n//   const dataProps  = location.state;\n//   console.log(dataProps);\n//   const [data, setData] = useState({ title: \"\", genre: \"\", numberInStock: \"\", rate: \"\" })\n//   const [errors, setErrors] = useState({})\n//   // const movie = useParams().movie;\n//   // console.log(movie);\n//   // const naviage = useNavigate();\n//   // const handleFormSave= () =>{\n//   //   naviage(\"/movies\")\n//   //   //to do\n//   // }\n//   const handleForm = (event) => {\n//     event.preventDefault();\n//     const errors = handleErrors();\n//     setErrors(errors || {});\n//     console.log(errors);\n//     if (errors) return;\n//     doSubmit();\n//   };\n//   const handleErrors = () => {\n//         const { error } = Joi.validate(data, schema, {\n//           abortEarly: false,\n//         });\n//         console.log(error);\n//         if (!error) return null;\n//         const errors = {};\n//         for (let item of error.details) {\n//           errors[item.path[0]] = item.message;\n//         }\n//         return errors;\n//       };\n//       const handleOnChange = ({ currentTarget: input }) => {\n//         let newErrors = { ...errors };\n//         let newMessage = handleOnSaveErrors(input);\n//         if (newMessage) newErrors[input.name] = newMessage;\n//         else delete newErrors[input.name];\n//         let value = input.value;\n//         let newData = { ...data };\n//         newData[input.name] = value;\n//         setData(newData);\n//         setErrors(newErrors); \n//       };\n//       const handleOnSaveErrors = ({ name, value }) => {\n//         const toBeValidate = { [name]: value };\n//         const OnSaveSchema = { [name]: schema[name] };\n//         const { error } = Joi.validate(toBeValidate, OnSaveSchema);\n//         console.log(error);\n//         return error ? error.details[0].message : null;\n//       };\n//       const schema = {  \n//         title: Joi.string().required().label(\"Title\"),\n//         genre: Joi.string().required().label(\"Genre\"),\n//         numberInStock: Joi.number()\n//           .integer()\n//           .min(0)\n//           .max(100)\n//           .required()\n//           .label(\"Number in Stock\"),\n//         rate: Joi.number().integer().min(0).max(10).required().label(\"Rate\"),\n//       };\n//      const  doSubmit = () => {\n//         //server call\n//         console.log(data);\n//       };\n//       const renderButton = (label) => {\n//         return (\n//           <button\n//             disabled={handleErrors()}\n//             onClick={handleForm}\n//             className=\"btn btn-primary\"\n//           >\n//             {label}\n//           </button>\n//         );\n//       };\n//       const renderInput = (name, label, type) => {\n//         return (\n//           <InputFeild\n//             name={name}\n//             label={label}\n//             value={data[name]}\n//             onChange={handleOnChange}\n//             type={type}\n//             error={errors[name]}\n//           />\n//         );\n//       };\n//   return (\n//     <div className=\"container mt-5\">\n//         <h1>Movie Form</h1>\n//         <form onSubmit={handleForm}>\n//           {renderInput(\"title\", \"Title\", \"text\")}\n//           <InputFeildSelect name=\"genre\" value={data.genre} onChange={handleOnChange} error={errors.genre} />\n//           {renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\n//           {renderInput(\"rate\", \"Rate\", \"number\")}\n//           {renderButton(\"Save\")}\n//         </form>\n//       </div>\n//   );\n// };\n// export default NewMovieForm;","map":{"version":3,"names":["React","Joi","ReuseAbleForm","InputFeild","InputFeildSelect","NewMovieForm","state","data","title","genre","numberInStock","rate","errors","schema","string","required","label","number","integer","min","max","doSubmit","console","log","renderButton","handleErrors","handleForm","renderInput","name","type","handleOnChange","render"],"sources":["/home/abdulhayan/stack/mern/react/practice/vidly/src/common/newMovieForm/newMovieForm.jsx"],"sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport ReuseAbleForm from \"./ReuseableForm\";\nimport InputFeild from \"./Input\";\nimport InputFeildSelect from \"./Input_select\";\n\nclass NewMovieForm extends ReuseAbleForm {\n  // const { match } = this.props;\n  state = {\n    data: { title: \"\", genre: \"\", numberInStock: \"\", rate: \"\" },\n    errors: {},\n  };\n\n  schema = {  \n    title: Joi.string().required().label(\"Title\"),\n    genre: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .integer()\n      .min(0)\n      .max(100)\n      .required()\n      .label(\"Number in Stock\"),\n    rate: Joi.number().integer().min(0).max(10).required().label(\"Rate\"),\n  };\n\n  doSubmit = () => {\n    //server call\n    console.log(this.state.data);\n  };\n\n  renderButton = (label) => {\n    return (\n      <button\n        disabled={this.handleErrors()}\n        onClick={this.handleForm}\n        className=\"btn btn-primary\"\n      >\n        {label}\n      </button>\n    );\n  };\n\n  renderInput = (name, label, type) => {\n    const { data, errors } = this.state;\n    // const { newMovie } = this.props.match.params;\n    // newMovie(\"hayan\");\n    return (\n      <InputFeild\n        name={name}\n        label={label}\n        value={data[name]}\n        onChange={this.handleOnChange}\n        type={type}\n        error={errors[name]}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleForm}>\n          {this.renderInput(\"title\", \"Title\", \"text\")}\n          <InputFeildSelect name=\"genre\" value={this.state.data.genre} onChange={this.handleOnChange} error={this.state.errors.genre} />\n          {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\n          {this.renderInput(\"rate\", \"Rate\", \"number\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\nexport default NewMovieForm;\n// import React from \"react\";\n// import { useParams,useNavigate, useLocation } from \"react-router-dom\";\n// import { useState } from \"react\";\n// import InputFeild from \"./Input\";\n// import InputFeildSelect from \"./Input_select\";\n// import Joi from \"joi-browser\";\n\n\n\n// const NewMovieForm = () => {\n\n//   const fun = {function: () => {console.log(\"ffgf\")}}\n//   console.log(fun);\n\n//   const location = useLocation();\n//   const dataProps  = location.state;\n//   console.log(dataProps);\n//   const [data, setData] = useState({ title: \"\", genre: \"\", numberInStock: \"\", rate: \"\" })\n//   const [errors, setErrors] = useState({})\n//   // const movie = useParams().movie;\n//   // console.log(movie);\n//   // const naviage = useNavigate();\n\n//   // const handleFormSave= () =>{\n//   //   naviage(\"/movies\")\n//   //   //to do\n//   // }\n\n//   const handleForm = (event) => {\n//     event.preventDefault();\n//     const errors = handleErrors();\n//     setErrors(errors || {});\n//     console.log(errors);\n//     if (errors) return;\n//     doSubmit();\n//   };\n \n//   const handleErrors = () => {\n//         const { error } = Joi.validate(data, schema, {\n//           abortEarly: false,\n//         });\n//         console.log(error);\n//         if (!error) return null;\n//         const errors = {};\n//         for (let item of error.details) {\n//           errors[item.path[0]] = item.message;\n//         }\n//         return errors;\n//       };\n\n//       const handleOnChange = ({ currentTarget: input }) => {\n//         let newErrors = { ...errors };\n//         let newMessage = handleOnSaveErrors(input);\n//         if (newMessage) newErrors[input.name] = newMessage;\n//         else delete newErrors[input.name];\n//         let value = input.value;\n//         let newData = { ...data };\n//         newData[input.name] = value;\n//         setData(newData);\n//         setErrors(newErrors); \n//       };\n    \n\n//       const handleOnSaveErrors = ({ name, value }) => {\n//         const toBeValidate = { [name]: value };\n//         const OnSaveSchema = { [name]: schema[name] };\n//         const { error } = Joi.validate(toBeValidate, OnSaveSchema);\n//         console.log(error);\n//         return error ? error.details[0].message : null;\n//       };\n//       const schema = {  \n//         title: Joi.string().required().label(\"Title\"),\n//         genre: Joi.string().required().label(\"Genre\"),\n//         numberInStock: Joi.number()\n//           .integer()\n//           .min(0)\n//           .max(100)\n//           .required()\n//           .label(\"Number in Stock\"),\n//         rate: Joi.number().integer().min(0).max(10).required().label(\"Rate\"),\n//       };\n    \n//      const  doSubmit = () => {\n//         //server call\n//         console.log(data);\n//       };\n    \n//       const renderButton = (label) => {\n//         return (\n//           <button\n//             disabled={handleErrors()}\n//             onClick={handleForm}\n//             className=\"btn btn-primary\"\n//           >\n//             {label}\n//           </button>\n//         );\n//       };\n    \n//       const renderInput = (name, label, type) => {\n//         return (\n//           <InputFeild\n//             name={name}\n//             label={label}\n//             value={data[name]}\n//             onChange={handleOnChange}\n//             type={type}\n//             error={errors[name]}\n//           />\n//         );\n//       };\n    \n//   return (\n//     <div className=\"container mt-5\">\n//         <h1>Movie Form</h1>\n//         <form onSubmit={handleForm}>\n//           {renderInput(\"title\", \"Title\", \"text\")}\n//           <InputFeildSelect name=\"genre\" value={data.genre} onChange={handleOnChange} error={errors.genre} />\n//           {renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\n//           {renderInput(\"rate\", \"Rate\", \"number\")}\n//           {renderButton(\"Save\")}\n//         </form>\n//       </div>\n//   );\n// };\n\n// export default NewMovieForm;\n"],"mappings":"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},"metadata":{},"sourceType":"module"}